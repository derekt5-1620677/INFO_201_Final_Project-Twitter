# Use `runif()` to add a random number between -5000 and 10000 to each of 2016's
# salaries (the negative number means that a salary may have decreased!)
salaries.2017 <- salaries.2016 + (runif(100, -5000, 10000))
# Create a data frame 'salaries' by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salaries.2016, salaries.2017, stringsAsFactors = FALSE)
# Create a column 'change' that stores each person's change in salary between
# 2016 and 2017
salaries$change <- salaries$salaries.2017 - salaries$salaries.2016
# Create a column 'got.raise' that is TRUE if the person got a raise (their
# salary went up)
salaries$got.raise <- salaries$change > 0
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2017 salary of employee 57
salaries[57, "salaries.2017"]
# How many employees got a raise?
sum(salaries$got.raise)
# What was the dollar value of the highest raise?
max.salary <- max(salaries$change)
# What was the "name" of the employee who received the highest raise?
salaries[salaries$change == max(salaries$change), 1]
# What was the largest decrease in salaries between the two years?
min.salary <- min(salaries$change)
# What was the name of the employee who recieved largest decrease in salary?
salaries[salaries$change == min.salary, 1]
# What was the average salary change?
# For people who did not get a raise, how much money did they lose on average?
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling
employees <- c(paste("Employee", 1:100))
# Create a vector of 100 random salaries for the year 2016
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries.2016 <- c(runif(100, 40000, 50000))
# Create a vector of 100 salaries in 2017 that have changed from 2016
# Use `runif()` to add a random number between -5000 and 10000 to each of 2016's
# salaries (the negative number means that a salary may have decreased!)
salaries.2017 <- salaries.2016 + (runif(100, -5000, 10000))
# Create a data frame 'salaries' by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salaries.2016, salaries.2017, stringsAsFactors = FALSE)
# Create a column 'change' that stores each person's change in salary between
# 2016 and 2017
salaries$change <- salaries$salaries.2017 - salaries$salaries.2016
# Create a column 'got.raise' that is TRUE if the person got a raise (their
# salary went up)
salaries$got.raise <- salaries$change > 0
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2017 salary of employee 57
salaries[57, "salaries.2017"]
# How many employees got a raise?
sum(salaries$got.raise)
# What was the dollar value of the highest raise?
max.salary <- max(salaries$change)
# What was the "name" of the employee who received the highest raise?
salaries[salaries$change == max(salaries$change), 1]
# What was the largest decrease in salaries between the two years?
min.salary <- min(salaries$change)
# What was the name of the employee who recieved largest decrease in salary?
salaries[salaries$change == min.salary, 1]
# What was the average salary change?
# For people who did not get a raise, how much money did they lose on average?
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
salaries[62, ]
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling
employees <- c(paste("Employee", 1:100))
# Create a vector of 100 random salaries for the year 2016
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries.2016 <- c(runif(100, 40000, 50000))
# Create a vector of 100 salaries in 2017 that have changed from 2016
# Use `runif()` to add a random number between -5000 and 10000 to each of 2016's
# salaries (the negative number means that a salary may have decreased!)
salaries.2017 <- salaries.2016 + (runif(100, -5000, 10000))
# Create a data frame 'salaries' by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salaries.2016, salaries.2017, stringsAsFactors = FALSE)
# Create a column 'change' that stores each person's change in salary between
# 2016 and 2017
salaries$change <- salaries$salaries.2017 - salaries$salaries.2016
# Create a column 'got.raise' that is TRUE if the person got a raise (their
# salary went up)
salaries$got.raise <- salaries$change > 0
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2017 salary of employee 57
salaries[57, "salaries.2017"]
# How many employees got a raise?
sum(salaries$got.raise)
# What was the dollar value of the highest raise?
max.salary <- max(salaries$change)
# What was the "name" of the employee who received the highest raise?
salaries[salaries$change == max(salaries$change), 1]
# What was the largest decrease in salaries between the two years?
min.salary <- min(salaries$change)
# What was the name of the employee who recieved largest decrease in salary?
salaries[salaries$change == min.salary, 1]
# What was the average salary change?
# For people who did not get a raise, how much money did they lose on average?
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
salaries[48, ]
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling
employees <- c(paste("Employee", 1:100))
# Create a vector of 100 random salaries for the year 2016
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries.2016 <- c(runif(100, 40000, 50000))
# Create a vector of 100 salaries in 2017 that have changed from 2016
# Use `runif()` to add a random number between -5000 and 10000 to each of 2016's
# salaries (the negative number means that a salary may have decreased!)
salaries.2017 <- salaries.2016 + (runif(100, -5000, 10000))
# Create a data frame 'salaries' by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salaries.2016, salaries.2017, stringsAsFactors = FALSE)
# Create a column 'change' that stores each person's change in salary between
# 2016 and 2017
salaries$change <- salaries$salaries.2017 - salaries$salaries.2016
# Create a column 'got.raise' that is TRUE if the person got a raise (their
# salary went up)
salaries$got.raise <- salaries$change > 0
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2017 salary of employee 57
salaries[57, "salaries.2017"]
# How many employees got a raise?
gotraise <- sum(salaries$got.raise)
# What was the dollar value of the highest raise?
max.salary <- max(salaries$change)
# What was the "name" of the employee who received the highest raise?
salaries[salaries$change == max(salaries$change), 1]
# What was the largest decrease in salaries between the two years?
min.salary <- min(salaries$change)
# What was the name of the employee who recieved largest decrease in salary?
salaries[salaries$change == min.salary, 1]
# What was the average salary change?
# For people who did not get a raise, how much money did they lose on average?
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
true + FALSE
TRUE + FALSE
gotraise
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling
employees <- c(paste("Employee", 1:100))
# Create a vector of 100 random salaries for the year 2016
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries.2016 <- c(runif(100, 40000, 50000))
# Create a vector of 100 salaries in 2017 that have changed from 2016
# Use `runif()` to add a random number between -5000 and 10000 to each of 2016's
# salaries (the negative number means that a salary may have decreased!)
salaries.2017 <- salaries.2016 + (runif(100, -5000, 10000))
# Create a data frame 'salaries' by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salaries.2016, salaries.2017, stringsAsFactors = FALSE)
# Create a column 'change' that stores each person's change in salary between
# 2016 and 2017
salaries$change <- salaries$salaries.2017 - salaries$salaries.2016
# Create a column 'got.raise' that is TRUE if the person got a raise (their
# salary went up)
salaries$got.raise <- salaries$change > 0
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2017 salary of employee 57
salaries[57, "salaries.2017"]
# How many employees got a raise?
got.raise <- sum(salaries$got.raise)
# What was the dollar value of the highest raise?
max.salary <- max(salaries$change)
# What was the "name" of the employee who received the highest raise?
salaries[salaries$change == max(salaries$change), 1]
# What was the largest decrease in salaries between the two years?
min.salary <- min(salaries$change)
# What was the name of the employee who recieved largest decrease in salary?
salaries[salaries$change == min.salary, 1]
# What was the average salary change?
# For people who did not get a raise, how much money did they lose on average?
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
salaries[ , got.raise == TRUE]
test <- salaries[ , got.raise == TRUE]
View(test)
test <- salaries[ , got.raise[got.raise == TRUE]]
View(test)
View(salaries)
test <- salaries[ , got.raise]
test <- salaries[ , salaries$got.raise]
salaries[, got.raise]
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling
employees <- c(paste("Employee", 1:100))
# Create a vector of 100 random salaries for the year 2016
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries.2016 <- c(runif(100, 40000, 50000))
# Create a vector of 100 salaries in 2017 that have changed from 2016
# Use `runif()` to add a random number between -5000 and 10000 to each of 2016's
# salaries (the negative number means that a salary may have decreased!)
salaries.2017 <- salaries.2016 + (runif(100, -5000, 10000))
# Create a data frame 'salaries' by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salaries.2016, salaries.2017, stringsAsFactors = FALSE)
# Create a column 'change' that stores each person's change in salary between
# 2016 and 2017
salaries$change <- salaries$salaries.2017 - salaries$salaries.2016
# Create a column 'got.raise' that is TRUE if the person got a raise (their
# salary went up)
salaries$got.raise <- salaries$change > 0
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2017 salary of employee 57
salaries[57, "salaries.2017"]
# How many employees got a raise?
got.raise <- sum(salaries$got.raise)
# What was the dollar value of the highest raise?
max.salary <- max(salaries$change)
# What was the "name" of the employee who received the highest raise?
salaries[salaries$change == max(salaries$change), 1]
# What was the largest decrease in salaries between the two years?
min.salary <- min(salaries$change)
# What was the name of the employee who recieved largest decrease in salary?
salaries[salaries$change == min.salary, 1]
# What was the average salary change?
# For people who did not get a raise, how much money did they lose on average?
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling
employees <- c(paste("Employee", 1:100))
# Create a vector of 100 random salaries for the year 2016
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries.2016 <- c(runif(100, 40000, 50000))
# Create a vector of 100 salaries in 2017 that have changed from 2016
# Use `runif()` to add a random number between -5000 and 10000 to each of 2016's
# salaries (the negative number means that a salary may have decreased!)
salaries.2017 <- salaries.2016 + (runif(100, -5000, 10000))
# Create a data frame 'salaries' by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salaries.2016, salaries.2017, stringsAsFactors = FALSE)
# Create a column 'change' that stores each person's change in salary between
# 2016 and 2017
salaries$change <- salaries$salaries.2017 - salaries$salaries.2016
# Create a column 'got.raise' that is TRUE if the person got a raise (their
# salary went up)
salaries$got.raise <- salaries$change > 0
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2017 salary of employee 57
salaries[57, "salaries.2017"]
# How many employees got a raise?
got.raise <- sum(salaries$got.raise)
# What was the dollar value of the highest raise?
max.salary <- max(salaries$change)
# What was the "name" of the employee who received the highest raise?
salaries[salaries$change == max(salaries$change), 1]
# What was the largest decrease in salaries between the two years?
min.salary <- min(salaries$change)
# What was the name of the employee who recieved largest decrease in salary?
salaries[salaries$change == min.salary, 1]
# What was the average salary change?
# For people who did not get a raise, how much money did they lose on average?
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
salaries[ , got.raise]
salaries[got.raise, ]
salaries[got.raise, ]
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling
employees <- c(paste("Employee", 1:100))
# Create a vector of 100 random salaries for the year 2016
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries.2016 <- c(runif(100, 40000, 50000))
# Create a vector of 100 salaries in 2017 that have changed from 2016
# Use `runif()` to add a random number between -5000 and 10000 to each of 2016's
# salaries (the negative number means that a salary may have decreased!)
salaries.2017 <- salaries.2016 + (runif(100, -5000, 10000))
# Create a data frame 'salaries' by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salaries.2016, salaries.2017, stringsAsFactors = FALSE)
# Create a column 'change' that stores each person's change in salary between
# 2016 and 2017
salaries$change <- salaries$salaries.2017 - salaries$salaries.2016
# Create a column 'got.raise' that is TRUE if the person got a raise (their
# salary went up)
salaries$got.raise <- salaries$change > 0
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2017 salary of employee 57
salaries[57, "salaries.2017"]
# How many employees got a raise?
raise<- sum(salaries$got.raise)
# What was the dollar value of the highest raise?
max.salary <- max(salaries$change)
# What was the "name" of the employee who received the highest raise?
salaries[salaries$change == max(salaries$change), 1]
# What was the largest decrease in salaries between the two years?
min.salary <- min(salaries$change)
# What was the name of the employee who recieved largest decrease in salary?
salaries[salaries$change == min.salary, 1]
# What was the average salary change?
# For people who did not get a raise, how much money did they lose on average?
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling
employees <- c(paste("Employee", 1:100))
# Create a vector of 100 random salaries for the year 2016
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries.2016 <- c(runif(100, 40000, 50000))
# Create a vector of 100 salaries in 2017 that have changed from 2016
# Use `runif()` to add a random number between -5000 and 10000 to each of 2016's
# salaries (the negative number means that a salary may have decreased!)
salaries.2017 <- salaries.2016 + (runif(100, -5000, 10000))
# Create a data frame 'salaries' by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salaries.2016, salaries.2017, stringsAsFactors = FALSE)
# Create a column 'change' that stores each person's change in salary between
# 2016 and 2017
salaries$change <- salaries$salaries.2017 - salaries$salaries.2016
# Create a column 'got.raise' that is TRUE if the person got a raise (their
# salary went up)
salaries$got.raise <- salaries$change > 0
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2017 salary of employee 57
salaries[57, "salaries.2017"]
# How many employees got a raise?
raise<- sum(salaries$got.raise)
# What was the dollar value of the highest raise?
max.salary <- max(salaries$change)
# What was the "name" of the employee who received the highest raise?
salaries[salaries$change == max(salaries$change), 1]
# What was the largest decrease in salaries between the two years?
min.salary <- min(salaries$change)
# What was the name of the employee who recieved largest decrease in salary?
salaries[salaries$change == min.salary, 1]
# What was the average salary change?
# For people who did not get a raise, how much money did they lose on average?
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
salaries[ , got.raise]
salaries[got.raise, ]
salaries[ , 5]
salaries[ , "got.raise"]
salaries[ , "got.raise" == TRUE]
salaries[ , salaries$got.raise == TRUE]
salaries[salaries$got.raise == TRUE, "got.raise"]
test <- salaries[salaries$got.raise == TRUE, "got.raise"]
# What was the "name" of the employee who received the highest raise?
salaries[salaries$change == max(salaries$change), 1]
# What was the "name" of the employee who received the highest raise?
salaries[salaries$change == max(salaries$change), 1]
# What was the largest decrease in salaries between the two years?
min.salary <- min(salaries$change)
# What was the name of the employee who recieved largest decrease in salary?
salaries[salaries$change == min.salary, 1]
# What was the name of the employee who recieved largest decrease in salary?
salaries[salaries$change == min.salary, 1]
# What was the average salary change?
avg.salary.change <- sum(salaries$change) / 100
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling
employees <- c(paste("Employee", 1:100))
# Create a vector of 100 random salaries for the year 2016
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries.2016 <- c(runif(100, 40000, 50000))
# Create a vector of 100 salaries in 2017 that have changed from 2016
# Use `runif()` to add a random number between -5000 and 10000 to each of 2016's
# salaries (the negative number means that a salary may have decreased!)
salaries.2017 <- salaries.2016 + (runif(100, -5000, 10000))
# Create a data frame 'salaries' by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salaries.2016, salaries.2017, stringsAsFactors = FALSE)
# Create a column 'change' that stores each person's change in salary between
# 2016 and 2017
salaries$change <- salaries$salaries.2017 - salaries$salaries.2016
# Create a column 'got.raise' that is TRUE if the person got a raise (their
# salary went up)
salaries$got.raise <- salaries$change > 0
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2017 salary of employee 57
salaries[57, "salaries.2017"]
# How many employees got a raise?
raise <- sum(salaries$got.raise)
# What was the dollar value of the highest raise?
max.salary <- max(salaries$change)
# What was the "name" of the employee who received the highest raise?
salaries[salaries$change == max(salaries$change), 1]
# What was the largest decrease in salaries between the two years?
min.salary <- min(salaries$change)
# What was the name of the employee who recieved largest decrease in salary?
salaries[salaries$change == min.salary, 1]
# What was the average salary change?
avg.salary.change <- mean(salaries$change)
# For people who did not get a raise, how much money did they lose on average?
avg.salary.loss <- mean(salaries[salaries$got.raise == FALSE, "got.raise"])
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
# Exercise 2: working with data frames
# Create a vector of 100 employees ("Employee 1", "Employee 2", ... "Employee 100")
# Hint: use the `paste()` function and vector recycling
employees <- c(paste("Employee", 1:100))
# Create a vector of 100 random salaries for the year 2016
# Use the `runif()` function to pick random numbers between 40000 and 50000
salaries.2016 <- c(runif(100, 40000, 50000))
# Create a vector of 100 salaries in 2017 that have changed from 2016
# Use `runif()` to add a random number between -5000 and 10000 to each of 2016's
# salaries (the negative number means that a salary may have decreased!)
salaries.2017 <- salaries.2016 + (runif(100, -5000, 10000))
# Create a data frame 'salaries' by combining the 3 vectors you just made
# Remember to set `stringsAsFactors=FALSE`!
salaries <- data.frame(employees, salaries.2016, salaries.2017, stringsAsFactors = FALSE)
# Create a column 'change' that stores each person's change in salary between
# 2016 and 2017
salaries$change <- salaries$salaries.2017 - salaries$salaries.2016
# Create a column 'got.raise' that is TRUE if the person got a raise (their
# salary went up)
salaries$got.raise <- salaries$change > 0
### Retrieve values from your data frame to answer the following questions
### Note that you should get the value as specific as possible (e.g., a single
### cell rather than the whole row!)
# What was the 2017 salary of employee 57
salaries[57, "salaries.2017"]
# How many employees got a raise?
raise <- sum(salaries$got.raise)
# What was the dollar value of the highest raise?
max.salary <- max(salaries$change)
# What was the "name" of the employee who received the highest raise?
salaries[salaries$change == max(salaries$change), 1]
# What was the largest decrease in salaries between the two years?
min.salary <- min(salaries$change)
# What was the name of the employee who recieved largest decrease in salary?
salaries[salaries$change == min.salary, 1]
# What was the average salary change?
avg.salary.change <- mean(salaries$change)
# For people who did not get a raise, how much money did they lose on average?
avg.salary.loss <- mean(salaries[salaries$got.raise == FALSE, "change"])
## Consider: do the above averages match what you expected them to be based on
## how you generated the salaries?
# Write a .csv file of your salary data to your working directory
setwd("C:/Users/Andrew/Desktop/info201/INFO_201_Final_Project-Twitter")
#install.packages("twitteR")
library(twitteR)
library(httr)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
consumer_key <- "HjpizPpXYCXQB3fm7eBEagDtQ"
consumer_secret <- "nELK0NHx1tKhTnqSA0K5fKDPKi7t5vnXqdmUdEPMN6otKQRbSd"
access_token <- "921397085898924033-1NVm7InRpat88iBzun2JrT7BdPjj4Ny"
access_secret <- "7cNcPuIG2SXKRXoy8BYAsG4oD94e1mdx4XWUozFzOoosz"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
library(base64enc)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
setup_twitter_oauth(consumer_key, consumer_secret)
library(httr)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
install.packages("ROAuth")
library(ROAuth)
load("my_oauth.Rdata")
registerTwitterOAuth(my_oath)
library(httr)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
#install.packages("twitteR")
library(twitteR)
library(httr)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
setup_twitter_oauth(consumer_key = consumer_key, consumer_secret = consumer_secret, access_token = access_token, access_secret = access_secret)
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
setup_twitter_oauth(consumer_key = consumer_key, consumer_secret = consumer_secret, access_token = access_token, access_secret = access_secret)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
#remove.packages("ROAuth")
#install.packages("twitteR")
library(twitteR)
library(httr)
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
setup_twitter_oauth(consumer_key, consumer_secret)
setup_twitter_oauth(consumer_key, consumer_secret)
